<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>be.leonix</groupId>
	<artifactId>leonix-parentpom</artifactId>
	<version>1.8.0-SNAPSHOT</version><!-- uses java-version -->
	<packaging>pom</packaging>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<unit.test.working.dir>${project.build.directory}/tests/unit-tests/working-dir</unit.test.working.dir>
		<integration.test.working.dir>${project.build.directory}/tests/integration-tests/working-dir</integration.test.working.dir>
	</properties>
	
	<profiles>
		<profile>
			<id>fullbuild</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>create-working-dir-for-integration-tests</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<mkdir dir="${integration.test.working.dir}" />
										<mkdir dir="${integration.test.working.dir}/testng-temp" />
										<mkdir dir="${integration.test.working.dir}/iotempdir" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>run-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<phase>integration-test</phase>
								<configuration>
									<failIfNoTests>false</failIfNoTests>
									<includes>
										<include>**/*_IT.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<docencoding>UTF-8</docencoding>
									<windowtitle>Leonix Documentation</windowtitle>
									<doctitle>Leonix Documentation</doctitle>
									<show>public</show>
									<doclint>none</doclint>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
		<defaultGoal>install</defaultGoal>
		<plugins><!-- in ALPHABETIC order group / artifact -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>checkstyle</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>be/leonix/checkstyle/checkstyle.xml</configLocation>
							<packageNamesLocation>be/leonix/checkstyle/packagenames.xml</packageNamesLocation>
							<logViolationsToConsole>true</logViolationsToConsole>
							<failOnViolation>true</failOnViolation>
							<failsOnError>true</failsOnError>
							<includeTestSourceDirectory>false</includeTestSourceDirectory>
							<consoleOutput>true</consoleOutput>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>13</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>analyze dependencies</id>
						<phase>compile</phase>
						<goals>
							<goal>analyze-only</goal>
							<goal>analyze-duplicate</goal>
						</goals>
						<configuration>
							<ignoreNonCompile>true</ignoreNonCompile>
							<failOnWarning>true</failOnWarning>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[${maven.version},)</version>
									<message>Check for Maven version &gt;=${maven.version} failed.</message>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce java runtime version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[1.13,)</version>
									<message>Check for JDK version failed.</message>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce-testng-only-as-test-dependency</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedDependencies>
									<excludes>
										<exclude>org.testng:testng</exclude>
									</excludes>
									<includes>
										<include>org.testng:testng:*:*:test</include> 
									</includes>
								</bannedDependencies>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedDependencies>
									<!-- pattern is "groupId:artifactId:version:type:scope" -->
									<excludes>
										<exclude>commons-logging:commons-logging</exclude>
										<exclude>commons-logging:commons-logging-api</exclude>
										<exclude>log4j:log4j</exclude>
										<exclude>junit:junit</exclude>
										
										<!--included in the jdk, adding as dependency can cause problems -->
										<exclude>xerces:xmlParserAPIs</exclude>
										
										<!-- this commons-collection has known deserialization vulnerabilities, these are fixed in commons-collections4 -->
										<exclude>commons-collections:commons-collections</exclude>
										
										<!-- stax apis are part of the jdk as of java 6, adding as a dependency can cause problems -->
										<exclude>javax.xml.stream:stax-api</exclude>
										<exclude>stax:stax-api</exclude>
										<exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>
										
										<!-- it turns out that bsh-core is significantly slower then the full bsh -->
										<exclude>org.beanshell:bsh-core</exclude>
									</excludes>
									<includes>
										<include>junit:junit:*:*:test</include>
									</includes>
								</bannedDependencies>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-ban-duplicate-classes</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<rules>
								<banDuplicateClasses>
									<ignoreClasses>
										<ignoreClass>org.rzo.yajsw.boot.*</ignoreClass>
										<ignoreClass>org.rzo.yajsw.log.*</ignoreClass>
										<ignoreClass>com.sun.jna.Platform</ignoreClass>
										<ignoreClass>org.w3c.dom.*</ignoreClass>
										<ignoreClass>org.cyberneko.html.*</ignoreClass>
										<ignoreClass>com.ibm.dickens.util.Timer</ignoreClass>
										
										<!-- JDK 11 removed Java APIs -->
										<ignoreClass>javax.annotation.*</ignoreClass>
										<ignoreClass>javax.activation.*</ignoreClass>
										<ignoreClass>com.sun.activation.*</ignoreClass>
										<ignoreClass>javax.xml.soap.*</ignoreClass>
										<ignoreClass>javax.xml.ws.*</ignoreClass>
										<ignoreClass>javax.jws.*</ignoreClass>
										
										<!-- Standard way of providing module info in several packages -->
										<ignoreClass>module-info</ignoreClass>
									</ignoreClasses>
									<scopes>
										<scope>compile</scope>
										<scope>runtime</scope>
									</scopes>
									<findAllDuplicates>true</findAllDuplicates>
								</banDuplicateClasses>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<testng.working.dir>${integration.test.working.dir}/testng-temp</testng.working.dir>
						<java.io.tmpdir>${integration.test.working.dir}/iotempdir</java.io.tmpdir>
					</systemPropertyVariables>
					<workingDirectory>${integration.test.working.dir}</workingDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Version>${project.version}-${buildNumber}</Implementation-Version>
							<Implementation-Vendor>Leonix</Implementation-Vendor>
						</manifestEntries>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<excludes>
						<exclude>logback.xml</exclude>
						<exclude>logback-test.xml</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>generate test jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<includeEmptyDirs>true</includeEmptyDirs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<testng.working.dir>${unit.test.working.dir}/testng-temp</testng.working.dir>
						<java.io.tmpdir>${unit.test.working.dir}/iotempdir</java.io.tmpdir>
					</systemPropertyVariables>
					<workingDirectory>${unit.test.working.dir}</workingDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>create-working-dir-for-unit-tests</id>
						<phase>test-compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<mkdir dir="${unit.test.working.dir}" />
								<mkdir dir="${unit.test.working.dir}/testng-temp" />
								<mkdir dir="${unit.test.working.dir}/iotempdir" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins><!-- in ALPHABETIC order group / artifact -->
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>maven-replacer-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.1.1</version>
					<dependencies>
						<dependency>
							<groupId>be.leonix</groupId>
							<artifactId>leonix-checkstyle</artifactId>
							<version>1.0.0-SNAPSHOT</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
					<dependencies>
						<dependency>
							<groupId>org.semver</groupId>
							<artifactId>enforcer-rule</artifactId>
							<version>0.9.33</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>extra-enforcer-rules</artifactId>
							<version>1.2</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>3.6.0</version>
					<dependencies>
						<dependency>
							<groupId>org.ow2.asm</groupId>
							<artifactId>asm</artifactId>
							<version>8.0.1</version><!-- JDK13 -->
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.11.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.9.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>1.0.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<version>2.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>1.2.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-component-metadata</artifactId>
					<version>2.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[3.0.0,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[3.1.1,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-clean-plugin</artifactId>
										<versionRange>
											[3.1.0,)
										</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[3.1.2,)
										</versionRange>
										<goals>
											<goal>copy</goal>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
											<goal>analyze-only</goal>
											<goal>analyze-duplicate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>
											maven-enforcer-plugin
										</artifactId>
										<versionRange>
											[1.4.1,)
										</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											buildnumber-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>create</goal>
											<goal>create-timestamp</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>
											versions-maven-plugin
										</artifactId>
										<versionRange>
											[2.7,)
										</versionRange>
										<goals>
											<goal>display-dependency-updates</goal>
											<goal>display-plugin-updates</goal>
											<goal>use-releases</goal>
											<goal>update-parent</goal>
											<goal>use-next-releases</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.plexus</groupId>
										<artifactId>plexus-component-metadata</artifactId>
										<versionRange>
											[2.1.0,)
										</versionRange>
										<goals>
											<goal>generate-metadata</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<ignore />
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											xml-maven-plugin
										</artifactId>
										<versionRange>
											[1.0.2,)
										</versionRange>
										<goals>
											<goal>validate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
